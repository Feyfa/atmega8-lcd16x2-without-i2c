
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000098a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  0000098a  000009fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000a22  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a80  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f8  00000000  00000000  00000abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012c9  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d5  00000000  00000000  00001e7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008b8  00000000  00000000  00002752  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000230  00000000  00000000  0000300c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000049d  00000000  00000000  0000323c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a91  00000000  00000000  000036d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  0000416a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea e8       	ldi	r30, 0x8A	; 138
  3a:	f9 e0       	ldi	r31, 0x09	; 9
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 38       	cpi	r26, 0x84	; 132
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	7b d1       	rcall	.+758    	; 0x340 <main>
  4a:	9d c4       	rjmp	.+2362   	; 0x986 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <wait_PB>:
}
void lcdClear_PB()
{
	//clear screen lcd
	lcdCommand_PB(0x01);  
	wait_PB();
  4e:	8f e6       	ldi	r24, 0x6F	; 111
  50:	97 e1       	ldi	r25, 0x17	; 23
  52:	01 97       	sbiw	r24, 0x01	; 1
  54:	f1 f7       	brne	.-4      	; 0x52 <wait_PB+0x4>
  56:	00 c0       	rjmp	.+0      	; 0x58 <wait_PB+0xa>
  58:	00 00       	nop
  5a:	08 95       	ret

0000005c <lcdCommand_PB>:
  5c:	cf 93       	push	r28
  5e:	c8 2f       	mov	r28, r24
  60:	88 b3       	in	r24, 0x18	; 24
  62:	80 7f       	andi	r24, 0xF0	; 240
  64:	9c 2f       	mov	r25, r28
  66:	92 95       	swap	r25
  68:	9f 70       	andi	r25, 0x0F	; 15
  6a:	89 2b       	or	r24, r25
  6c:	88 bb       	out	0x18, r24	; 24
  6e:	88 b3       	in	r24, 0x18	; 24
  70:	8f 7d       	andi	r24, 0xDF	; 223
  72:	88 bb       	out	0x18, r24	; 24
  74:	88 b3       	in	r24, 0x18	; 24
  76:	8f 7e       	andi	r24, 0xEF	; 239
  78:	88 bb       	out	0x18, r24	; 24
  7a:	88 b3       	in	r24, 0x18	; 24
  7c:	80 64       	ori	r24, 0x40	; 64
  7e:	88 bb       	out	0x18, r24	; 24
  80:	e6 df       	rcall	.-52     	; 0x4e <wait_PB>
  82:	88 b3       	in	r24, 0x18	; 24
  84:	8f 7b       	andi	r24, 0xBF	; 191
  86:	88 bb       	out	0x18, r24	; 24
  88:	e2 df       	rcall	.-60     	; 0x4e <wait_PB>
  8a:	88 b3       	in	r24, 0x18	; 24
  8c:	80 7f       	andi	r24, 0xF0	; 240
  8e:	cf 70       	andi	r28, 0x0F	; 15
  90:	c8 2b       	or	r28, r24
  92:	c8 bb       	out	0x18, r28	; 24
  94:	88 b3       	in	r24, 0x18	; 24
  96:	80 64       	ori	r24, 0x40	; 64
  98:	88 bb       	out	0x18, r24	; 24
  9a:	d9 df       	rcall	.-78     	; 0x4e <wait_PB>
  9c:	88 b3       	in	r24, 0x18	; 24
  9e:	8f 7b       	andi	r24, 0xBF	; 191
  a0:	88 bb       	out	0x18, r24	; 24
  a2:	d5 df       	rcall	.-86     	; 0x4e <wait_PB>
  a4:	cf 91       	pop	r28
  a6:	08 95       	ret

000000a8 <lcdData_PB>:
  a8:	cf 93       	push	r28
  aa:	c8 2f       	mov	r28, r24
  ac:	88 b3       	in	r24, 0x18	; 24
  ae:	80 7f       	andi	r24, 0xF0	; 240
  b0:	9c 2f       	mov	r25, r28
  b2:	92 95       	swap	r25
  b4:	9f 70       	andi	r25, 0x0F	; 15
  b6:	89 2b       	or	r24, r25
  b8:	88 bb       	out	0x18, r24	; 24
  ba:	88 b3       	in	r24, 0x18	; 24
  bc:	8f 7d       	andi	r24, 0xDF	; 223
  be:	88 bb       	out	0x18, r24	; 24
  c0:	88 b3       	in	r24, 0x18	; 24
  c2:	80 61       	ori	r24, 0x10	; 16
  c4:	88 bb       	out	0x18, r24	; 24
  c6:	88 b3       	in	r24, 0x18	; 24
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	88 bb       	out	0x18, r24	; 24
  cc:	c0 df       	rcall	.-128    	; 0x4e <wait_PB>
  ce:	88 b3       	in	r24, 0x18	; 24
  d0:	8f 7b       	andi	r24, 0xBF	; 191
  d2:	88 bb       	out	0x18, r24	; 24
  d4:	bc df       	rcall	.-136    	; 0x4e <wait_PB>
  d6:	88 b3       	in	r24, 0x18	; 24
  d8:	80 7f       	andi	r24, 0xF0	; 240
  da:	cf 70       	andi	r28, 0x0F	; 15
  dc:	c8 2b       	or	r28, r24
  de:	c8 bb       	out	0x18, r28	; 24
  e0:	88 b3       	in	r24, 0x18	; 24
  e2:	80 64       	ori	r24, 0x40	; 64
  e4:	88 bb       	out	0x18, r24	; 24
  e6:	b3 df       	rcall	.-154    	; 0x4e <wait_PB>
  e8:	88 b3       	in	r24, 0x18	; 24
  ea:	8f 7b       	andi	r24, 0xBF	; 191
  ec:	88 bb       	out	0x18, r24	; 24
  ee:	af df       	rcall	.-162    	; 0x4e <wait_PB>
  f0:	cf 91       	pop	r28
  f2:	08 95       	ret

000000f4 <lcdInit_PB>:
  f4:	8f ef       	ldi	r24, 0xFF	; 255
  f6:	87 bb       	out	0x17, r24	; 23
  f8:	88 b3       	in	r24, 0x18	; 24
  fa:	8f 7b       	andi	r24, 0xBF	; 191
  fc:	88 bb       	out	0x18, r24	; 24
  fe:	8d e0       	ldi	r24, 0x0D	; 13
 100:	8a 95       	dec	r24
 102:	f1 f7       	brne	.-4      	; 0x100 <lcdInit_PB+0xc>
 104:	00 00       	nop
 106:	83 e3       	ldi	r24, 0x33	; 51
 108:	a9 df       	rcall	.-174    	; 0x5c <lcdCommand_PB>
 10a:	8d e0       	ldi	r24, 0x0D	; 13
 10c:	8a 95       	dec	r24
 10e:	f1 f7       	brne	.-4      	; 0x10c <lcdInit_PB+0x18>
 110:	00 00       	nop
 112:	82 e3       	ldi	r24, 0x32	; 50
 114:	a3 df       	rcall	.-186    	; 0x5c <lcdCommand_PB>
 116:	8d e0       	ldi	r24, 0x0D	; 13
 118:	8a 95       	dec	r24
 11a:	f1 f7       	brne	.-4      	; 0x118 <lcdInit_PB+0x24>
 11c:	00 00       	nop
 11e:	88 e2       	ldi	r24, 0x28	; 40
 120:	9d df       	rcall	.-198    	; 0x5c <lcdCommand_PB>
 122:	8d e0       	ldi	r24, 0x0D	; 13
 124:	8a 95       	dec	r24
 126:	f1 f7       	brne	.-4      	; 0x124 <lcdInit_PB+0x30>
 128:	00 00       	nop
 12a:	8c e0       	ldi	r24, 0x0C	; 12
 12c:	97 df       	rcall	.-210    	; 0x5c <lcdCommand_PB>
 12e:	8d e0       	ldi	r24, 0x0D	; 13
 130:	8a 95       	dec	r24
 132:	f1 f7       	brne	.-4      	; 0x130 <lcdInit_PB+0x3c>
 134:	00 00       	nop
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	91 df       	rcall	.-222    	; 0x5c <lcdCommand_PB>
 13a:	8d e0       	ldi	r24, 0x0D	; 13
 13c:	8a 95       	dec	r24
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcdInit_PB+0x48>
 140:	00 00       	nop
 142:	86 e0       	ldi	r24, 0x06	; 6
 144:	8b df       	rcall	.-234    	; 0x5c <lcdCommand_PB>
 146:	8d e0       	ldi	r24, 0x0D	; 13
 148:	8a 95       	dec	r24
 14a:	f1 f7       	brne	.-4      	; 0x148 <lcdInit_PB+0x54>
 14c:	00 00       	nop
 14e:	08 95       	ret

00000150 <lcdSetCursor_PB>:
}
void lcdSetCursor_PB(unsigned char x,unsigned char y)
{	
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	00 d0       	rcall	.+0      	; 0x156 <lcdSetCursor_PB+0x6>
 156:	00 d0       	rcall	.+0      	; 0x158 <lcdSetCursor_PB+0x8>
 158:	cd b7       	in	r28, 0x3d	; 61
 15a:	de b7       	in	r29, 0x3e	; 62
	unsigned char firstCharAdr[] = { 0x80 , 0xC0 , 0x94 , 0xD4 };
 15c:	90 e8       	ldi	r25, 0x80	; 128
 15e:	99 83       	std	Y+1, r25	; 0x01
 160:	90 ec       	ldi	r25, 0xC0	; 192
 162:	9a 83       	std	Y+2, r25	; 0x02
 164:	94 e9       	ldi	r25, 0x94	; 148
 166:	9b 83       	std	Y+3, r25	; 0x03
 168:	94 ed       	ldi	r25, 0xD4	; 212
 16a:	9c 83       	std	Y+4, r25	; 0x04
	lcdCommand_PB(firstCharAdr[y]+x);
 16c:	e1 e0       	ldi	r30, 0x01	; 1
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	ec 0f       	add	r30, r28
 172:	fd 1f       	adc	r31, r29
 174:	e6 0f       	add	r30, r22
 176:	f1 1d       	adc	r31, r1
 178:	90 81       	ld	r25, Z
 17a:	89 0f       	add	r24, r25
 17c:	6f df       	rcall	.-290    	; 0x5c <lcdCommand_PB>
	wait_PB();
 17e:	67 df       	rcall	.-306    	; 0x4e <wait_PB>
}
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	08 95       	ret

0000018e <lcdPrint_PB>:
void lcdPrint_PB(char *str)
{
 18e:	0f 93       	push	r16
 190:	1f 93       	push	r17
 192:	cf 93       	push	r28
 194:	8c 01       	movw	r16, r24
	unsigned char i = 0;
 196:	c0 e0       	ldi	r28, 0x00	; 0
	while(str[i] !=0)
 198:	02 c0       	rjmp	.+4      	; 0x19e <lcdPrint_PB+0x10>
	{
		lcdData_PB(str[i]);
 19a:	86 df       	rcall	.-244    	; 0xa8 <lcdData_PB>
		i++;
 19c:	cf 5f       	subi	r28, 0xFF	; 255
	wait_PB();
}
void lcdPrint_PB(char *str)
{
	unsigned char i = 0;
	while(str[i] !=0)
 19e:	f8 01       	movw	r30, r16
 1a0:	ec 0f       	add	r30, r28
 1a2:	f1 1d       	adc	r31, r1
 1a4:	80 81       	ld	r24, Z
 1a6:	81 11       	cpse	r24, r1
 1a8:	f8 cf       	rjmp	.-16     	; 0x19a <lcdPrint_PB+0xc>
	{
		lcdData_PB(str[i]);
		i++;
	}
}
 1aa:	cf 91       	pop	r28
 1ac:	1f 91       	pop	r17
 1ae:	0f 91       	pop	r16
 1b0:	08 95       	ret

000001b2 <lcdPrintWithCursor_PB>:
void lcdPrintWithCursor_PB(unsigned char x,unsigned char y,char *str)
{
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	ea 01       	movw	r28, r20
	lcdSetCursor_PB(x,y);
 1b8:	cb df       	rcall	.-106    	; 0x150 <lcdSetCursor_PB>
	lcdPrint_PB(str);
 1ba:	ce 01       	movw	r24, r28
 1bc:	e8 df       	rcall	.-48     	; 0x18e <lcdPrint_PB>
}
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <wait_PD>:
}
void lcdClear_PD()
{
	//clear screen lcd
	lcdCommand_PD(0x01);  
	wait_PD();
 1c4:	8f e6       	ldi	r24, 0x6F	; 111
 1c6:	97 e1       	ldi	r25, 0x17	; 23
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <wait_PD+0x4>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <wait_PD+0xa>
 1ce:	00 00       	nop
 1d0:	08 95       	ret

000001d2 <lcdCommand_PD>:
 1d2:	cf 93       	push	r28
 1d4:	c8 2f       	mov	r28, r24
 1d6:	82 b3       	in	r24, 0x12	; 18
 1d8:	80 7f       	andi	r24, 0xF0	; 240
 1da:	9c 2f       	mov	r25, r28
 1dc:	92 95       	swap	r25
 1de:	9f 70       	andi	r25, 0x0F	; 15
 1e0:	89 2b       	or	r24, r25
 1e2:	82 bb       	out	0x12, r24	; 18
 1e4:	82 b3       	in	r24, 0x12	; 18
 1e6:	8f 7d       	andi	r24, 0xDF	; 223
 1e8:	82 bb       	out	0x12, r24	; 18
 1ea:	82 b3       	in	r24, 0x12	; 18
 1ec:	8f 7e       	andi	r24, 0xEF	; 239
 1ee:	82 bb       	out	0x12, r24	; 18
 1f0:	82 b3       	in	r24, 0x12	; 18
 1f2:	80 64       	ori	r24, 0x40	; 64
 1f4:	82 bb       	out	0x12, r24	; 18
 1f6:	e6 df       	rcall	.-52     	; 0x1c4 <wait_PD>
 1f8:	82 b3       	in	r24, 0x12	; 18
 1fa:	8f 7b       	andi	r24, 0xBF	; 191
 1fc:	82 bb       	out	0x12, r24	; 18
 1fe:	e2 df       	rcall	.-60     	; 0x1c4 <wait_PD>
 200:	82 b3       	in	r24, 0x12	; 18
 202:	80 7f       	andi	r24, 0xF0	; 240
 204:	cf 70       	andi	r28, 0x0F	; 15
 206:	c8 2b       	or	r28, r24
 208:	c2 bb       	out	0x12, r28	; 18
 20a:	82 b3       	in	r24, 0x12	; 18
 20c:	80 64       	ori	r24, 0x40	; 64
 20e:	82 bb       	out	0x12, r24	; 18
 210:	d9 df       	rcall	.-78     	; 0x1c4 <wait_PD>
 212:	82 b3       	in	r24, 0x12	; 18
 214:	8f 7b       	andi	r24, 0xBF	; 191
 216:	82 bb       	out	0x12, r24	; 18
 218:	d5 df       	rcall	.-86     	; 0x1c4 <wait_PD>
 21a:	cf 91       	pop	r28
 21c:	08 95       	ret

0000021e <lcdData_PD>:
 21e:	cf 93       	push	r28
 220:	c8 2f       	mov	r28, r24
 222:	82 b3       	in	r24, 0x12	; 18
 224:	80 7f       	andi	r24, 0xF0	; 240
 226:	9c 2f       	mov	r25, r28
 228:	92 95       	swap	r25
 22a:	9f 70       	andi	r25, 0x0F	; 15
 22c:	89 2b       	or	r24, r25
 22e:	82 bb       	out	0x12, r24	; 18
 230:	82 b3       	in	r24, 0x12	; 18
 232:	8f 7d       	andi	r24, 0xDF	; 223
 234:	82 bb       	out	0x12, r24	; 18
 236:	82 b3       	in	r24, 0x12	; 18
 238:	80 61       	ori	r24, 0x10	; 16
 23a:	82 bb       	out	0x12, r24	; 18
 23c:	82 b3       	in	r24, 0x12	; 18
 23e:	80 64       	ori	r24, 0x40	; 64
 240:	82 bb       	out	0x12, r24	; 18
 242:	c0 df       	rcall	.-128    	; 0x1c4 <wait_PD>
 244:	82 b3       	in	r24, 0x12	; 18
 246:	8f 7b       	andi	r24, 0xBF	; 191
 248:	82 bb       	out	0x12, r24	; 18
 24a:	bc df       	rcall	.-136    	; 0x1c4 <wait_PD>
 24c:	82 b3       	in	r24, 0x12	; 18
 24e:	80 7f       	andi	r24, 0xF0	; 240
 250:	cf 70       	andi	r28, 0x0F	; 15
 252:	c8 2b       	or	r28, r24
 254:	c2 bb       	out	0x12, r28	; 18
 256:	82 b3       	in	r24, 0x12	; 18
 258:	80 64       	ori	r24, 0x40	; 64
 25a:	82 bb       	out	0x12, r24	; 18
 25c:	b3 df       	rcall	.-154    	; 0x1c4 <wait_PD>
 25e:	82 b3       	in	r24, 0x12	; 18
 260:	8f 7b       	andi	r24, 0xBF	; 191
 262:	82 bb       	out	0x12, r24	; 18
 264:	af df       	rcall	.-162    	; 0x1c4 <wait_PD>
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <lcdInit_PD>:
 26a:	8f ef       	ldi	r24, 0xFF	; 255
 26c:	81 bb       	out	0x11, r24	; 17
 26e:	82 b3       	in	r24, 0x12	; 18
 270:	8f 7b       	andi	r24, 0xBF	; 191
 272:	82 bb       	out	0x12, r24	; 18
 274:	8d e0       	ldi	r24, 0x0D	; 13
 276:	8a 95       	dec	r24
 278:	f1 f7       	brne	.-4      	; 0x276 <lcdInit_PD+0xc>
 27a:	00 00       	nop
 27c:	83 e3       	ldi	r24, 0x33	; 51
 27e:	a9 df       	rcall	.-174    	; 0x1d2 <lcdCommand_PD>
 280:	8d e0       	ldi	r24, 0x0D	; 13
 282:	8a 95       	dec	r24
 284:	f1 f7       	brne	.-4      	; 0x282 <lcdInit_PD+0x18>
 286:	00 00       	nop
 288:	82 e3       	ldi	r24, 0x32	; 50
 28a:	a3 df       	rcall	.-186    	; 0x1d2 <lcdCommand_PD>
 28c:	8d e0       	ldi	r24, 0x0D	; 13
 28e:	8a 95       	dec	r24
 290:	f1 f7       	brne	.-4      	; 0x28e <lcdInit_PD+0x24>
 292:	00 00       	nop
 294:	88 e2       	ldi	r24, 0x28	; 40
 296:	9d df       	rcall	.-198    	; 0x1d2 <lcdCommand_PD>
 298:	8d e0       	ldi	r24, 0x0D	; 13
 29a:	8a 95       	dec	r24
 29c:	f1 f7       	brne	.-4      	; 0x29a <lcdInit_PD+0x30>
 29e:	00 00       	nop
 2a0:	8c e0       	ldi	r24, 0x0C	; 12
 2a2:	97 df       	rcall	.-210    	; 0x1d2 <lcdCommand_PD>
 2a4:	8d e0       	ldi	r24, 0x0D	; 13
 2a6:	8a 95       	dec	r24
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <lcdInit_PD+0x3c>
 2aa:	00 00       	nop
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	91 df       	rcall	.-222    	; 0x1d2 <lcdCommand_PD>
 2b0:	8d e0       	ldi	r24, 0x0D	; 13
 2b2:	8a 95       	dec	r24
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <lcdInit_PD+0x48>
 2b6:	00 00       	nop
 2b8:	86 e0       	ldi	r24, 0x06	; 6
 2ba:	8b df       	rcall	.-234    	; 0x1d2 <lcdCommand_PD>
 2bc:	8d e0       	ldi	r24, 0x0D	; 13
 2be:	8a 95       	dec	r24
 2c0:	f1 f7       	brne	.-4      	; 0x2be <lcdInit_PD+0x54>
 2c2:	00 00       	nop
 2c4:	08 95       	ret

000002c6 <lcdSetCursor_PD>:
}
void lcdSetCursor_PD(unsigned char x,unsigned char y)
{
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	00 d0       	rcall	.+0      	; 0x2cc <lcdSetCursor_PD+0x6>
 2cc:	00 d0       	rcall	.+0      	; 0x2ce <lcdSetCursor_PD+0x8>
 2ce:	cd b7       	in	r28, 0x3d	; 61
 2d0:	de b7       	in	r29, 0x3e	; 62
	unsigned char firstCharAdr[] = { 0x80 , 0xC0 , 0x94 , 0xD4 };
 2d2:	90 e8       	ldi	r25, 0x80	; 128
 2d4:	99 83       	std	Y+1, r25	; 0x01
 2d6:	90 ec       	ldi	r25, 0xC0	; 192
 2d8:	9a 83       	std	Y+2, r25	; 0x02
 2da:	94 e9       	ldi	r25, 0x94	; 148
 2dc:	9b 83       	std	Y+3, r25	; 0x03
 2de:	94 ed       	ldi	r25, 0xD4	; 212
 2e0:	9c 83       	std	Y+4, r25	; 0x04
	
	lcdCommand_PD(firstCharAdr[y]+x);
 2e2:	e1 e0       	ldi	r30, 0x01	; 1
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	ec 0f       	add	r30, r28
 2e8:	fd 1f       	adc	r31, r29
 2ea:	e6 0f       	add	r30, r22
 2ec:	f1 1d       	adc	r31, r1
 2ee:	90 81       	ld	r25, Z
 2f0:	89 0f       	add	r24, r25
 2f2:	6f df       	rcall	.-290    	; 0x1d2 <lcdCommand_PD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f4:	8d e0       	ldi	r24, 0x0D	; 13
 2f6:	8a 95       	dec	r24
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <lcdSetCursor_PD+0x30>
 2fa:	00 00       	nop
	
	_delay_us(5);
}
 2fc:	0f 90       	pop	r0
 2fe:	0f 90       	pop	r0
 300:	0f 90       	pop	r0
 302:	0f 90       	pop	r0
 304:	df 91       	pop	r29
 306:	cf 91       	pop	r28
 308:	08 95       	ret

0000030a <lcdPrint_PD>:
void lcdPrint_PD(char *str)
{
 30a:	0f 93       	push	r16
 30c:	1f 93       	push	r17
 30e:	cf 93       	push	r28
 310:	8c 01       	movw	r16, r24
	unsigned char i = 0;
 312:	c0 e0       	ldi	r28, 0x00	; 0
	while(str[i] !=0)
 314:	02 c0       	rjmp	.+4      	; 0x31a <lcdPrint_PD+0x10>
	{
		lcdData_PD(str[i]);
 316:	83 df       	rcall	.-250    	; 0x21e <lcdData_PD>
		i++;
 318:	cf 5f       	subi	r28, 0xFF	; 255
	_delay_us(5);
}
void lcdPrint_PD(char *str)
{
	unsigned char i = 0;
	while(str[i] !=0)
 31a:	f8 01       	movw	r30, r16
 31c:	ec 0f       	add	r30, r28
 31e:	f1 1d       	adc	r31, r1
 320:	80 81       	ld	r24, Z
 322:	81 11       	cpse	r24, r1
 324:	f8 cf       	rjmp	.-16     	; 0x316 <lcdPrint_PD+0xc>
	{
		lcdData_PD(str[i]);
		i++;
	}
}
 326:	cf 91       	pop	r28
 328:	1f 91       	pop	r17
 32a:	0f 91       	pop	r16
 32c:	08 95       	ret

0000032e <lcdPrintWithCursor_PD>:
void lcdPrintWithCursor_PD(unsigned char x,unsigned char y,char *str)
{
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	ea 01       	movw	r28, r20
	lcdSetCursor_PD(x,y);
 334:	c8 df       	rcall	.-112    	; 0x2c6 <lcdSetCursor_PD>
	lcdPrint_PD(str);
 336:	ce 01       	movw	r24, r28
 338:	e8 df       	rcall	.-48     	; 0x30a <lcdPrint_PD>
}
 33a:	df 91       	pop	r29
 33c:	cf 91       	pop	r28
 33e:	08 95       	ret

00000340 <main>:
	- RS=PB4
	- RW=PB5
	- EN=PB6
	*/
	// LCD Init Uses PB Region
	lcdInit_PB();
 340:	d9 de       	rcall	.-590    	; 0xf4 <lcdInit_PB>
	
	// Set The LCD Cursor At x = 0 , y = 0
	lcdSetCursor_PB(0, 0);
 342:	60 e0       	ldi	r22, 0x00	; 0
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	04 df       	rcall	.-504    	; 0x150 <lcdSetCursor_PB>
	// Print, Parameters Can Only Be Strings
	lcdPrint_PB("use religion PB");
 348:	80 e6       	ldi	r24, 0x60	; 96
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	20 df       	rcall	.-448    	; 0x18e <lcdPrint_PB>
	
	// Print value 2024 use IntegerToString And Set The Cursor x = 0 , y = 1
	lcdPrintWithCursor_PB(0, 1, IntegerToString(2024));
 34e:	88 ee       	ldi	r24, 0xE8	; 232
 350:	97 e0       	ldi	r25, 0x07	; 7
 352:	15 d0       	rcall	.+42     	; 0x37e <IntegerToString>
 354:	ac 01       	movw	r20, r24
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	2b df       	rcall	.-426    	; 0x1b2 <lcdPrintWithCursor_PB>
	- RS=PD4
	- RW=PD5
	- EN=PD6
	*/
	// LCD Init Uses PD Region
	lcdInit_PD();
 35c:	86 df       	rcall	.-244    	; 0x26a <lcdInit_PD>
	
	// Set The LCD Cursor At x = 0 , y = 0
	lcdSetCursor_PD(0, 0);
 35e:	60 e0       	ldi	r22, 0x00	; 0
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	b1 df       	rcall	.-158    	; 0x2c6 <lcdSetCursor_PD>
	// Print, Parameters Can Only Be Strings
	lcdPrint_PD("use religion PD");
 364:	80 e7       	ldi	r24, 0x70	; 112
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	d0 df       	rcall	.-96     	; 0x30a <lcdPrint_PD>
	
	// Print value 1234 use IntegerToString And Set The Cursor x = 0 , y = 1
	lcdPrintWithCursor_PD(0, 1, IntegerToString(1234));
 36a:	82 ed       	ldi	r24, 0xD2	; 210
 36c:	94 e0       	ldi	r25, 0x04	; 4
 36e:	07 d0       	rcall	.+14     	; 0x37e <IntegerToString>
 370:	ac 01       	movw	r20, r24
 372:	61 e0       	ldi	r22, 0x01	; 1
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	db df       	rcall	.-74     	; 0x32e <lcdPrintWithCursor_PD>
}
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	08 95       	ret

0000037e <IntegerToString>:
#include "toString.h"

char* IntegerToString(int value)
{
 37e:	0f 93       	push	r16
 380:	1f 93       	push	r17
 382:	cf 93       	push	r28
 384:	df 93       	push	r29
 386:	cd b7       	in	r28, 0x3d	; 61
 388:	de b7       	in	r29, 0x3e	; 62
 38a:	cf 5f       	subi	r28, 0xFF	; 255
 38c:	d1 09       	sbc	r29, r1
 38e:	0f b6       	in	r0, 0x3f	; 63
 390:	f8 94       	cli
 392:	de bf       	out	0x3e, r29	; 62
 394:	0f be       	out	0x3f, r0	; 63
 396:	cd bf       	out	0x3d, r28	; 61
	char buff[255];
	char *string;
	
	sprintf(buff,"%d",value);
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	80 e8       	ldi	r24, 0x80	; 128
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	9f 93       	push	r25
 3a2:	8f 93       	push	r24
 3a4:	8e 01       	movw	r16, r28
 3a6:	0f 5f       	subi	r16, 0xFF	; 255
 3a8:	1f 4f       	sbci	r17, 0xFF	; 255
 3aa:	1f 93       	push	r17
 3ac:	0f 93       	push	r16
 3ae:	13 d0       	rcall	.+38     	; 0x3d6 <sprintf>
	string=buff;
	return string;
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	0f 90       	pop	r0
 3b8:	0f 90       	pop	r0
 3ba:	0f 90       	pop	r0
}
 3bc:	c8 01       	movw	r24, r16
 3be:	c1 50       	subi	r28, 0x01	; 1
 3c0:	df 4f       	sbci	r29, 0xFF	; 255
 3c2:	0f b6       	in	r0, 0x3f	; 63
 3c4:	f8 94       	cli
 3c6:	de bf       	out	0x3e, r29	; 62
 3c8:	0f be       	out	0x3f, r0	; 63
 3ca:	cd bf       	out	0x3d, r28	; 61
 3cc:	df 91       	pop	r29
 3ce:	cf 91       	pop	r28
 3d0:	1f 91       	pop	r17
 3d2:	0f 91       	pop	r16
 3d4:	08 95       	ret

000003d6 <sprintf>:
 3d6:	ae e0       	ldi	r26, 0x0E	; 14
 3d8:	b0 e0       	ldi	r27, 0x00	; 0
 3da:	e0 ef       	ldi	r30, 0xF0	; 240
 3dc:	f1 e0       	ldi	r31, 0x01	; 1
 3de:	aa c2       	rjmp	.+1364   	; 0x934 <__prologue_saves__+0x1c>
 3e0:	0d 89       	ldd	r16, Y+21	; 0x15
 3e2:	1e 89       	ldd	r17, Y+22	; 0x16
 3e4:	86 e0       	ldi	r24, 0x06	; 6
 3e6:	8c 83       	std	Y+4, r24	; 0x04
 3e8:	1a 83       	std	Y+2, r17	; 0x02
 3ea:	09 83       	std	Y+1, r16	; 0x01
 3ec:	8f ef       	ldi	r24, 0xFF	; 255
 3ee:	9f e7       	ldi	r25, 0x7F	; 127
 3f0:	9e 83       	std	Y+6, r25	; 0x06
 3f2:	8d 83       	std	Y+5, r24	; 0x05
 3f4:	ae 01       	movw	r20, r28
 3f6:	47 5e       	subi	r20, 0xE7	; 231
 3f8:	5f 4f       	sbci	r21, 0xFF	; 255
 3fa:	6f 89       	ldd	r22, Y+23	; 0x17
 3fc:	78 8d       	ldd	r23, Y+24	; 0x18
 3fe:	ce 01       	movw	r24, r28
 400:	01 96       	adiw	r24, 0x01	; 1
 402:	08 d0       	rcall	.+16     	; 0x414 <vfprintf>
 404:	ef 81       	ldd	r30, Y+7	; 0x07
 406:	f8 85       	ldd	r31, Y+8	; 0x08
 408:	e0 0f       	add	r30, r16
 40a:	f1 1f       	adc	r31, r17
 40c:	10 82       	st	Z, r1
 40e:	2e 96       	adiw	r28, 0x0e	; 14
 410:	e4 e0       	ldi	r30, 0x04	; 4
 412:	ac c2       	rjmp	.+1368   	; 0x96c <__epilogue_restores__+0x1c>

00000414 <vfprintf>:
 414:	ab e0       	ldi	r26, 0x0B	; 11
 416:	b0 e0       	ldi	r27, 0x00	; 0
 418:	ef e0       	ldi	r30, 0x0F	; 15
 41a:	f2 e0       	ldi	r31, 0x02	; 2
 41c:	7d c2       	rjmp	.+1274   	; 0x918 <__prologue_saves__>
 41e:	6c 01       	movw	r12, r24
 420:	7b 01       	movw	r14, r22
 422:	8a 01       	movw	r16, r20
 424:	fc 01       	movw	r30, r24
 426:	17 82       	std	Z+7, r1	; 0x07
 428:	16 82       	std	Z+6, r1	; 0x06
 42a:	83 81       	ldd	r24, Z+3	; 0x03
 42c:	81 ff       	sbrs	r24, 1
 42e:	bf c1       	rjmp	.+894    	; 0x7ae <__stack+0x34f>
 430:	ce 01       	movw	r24, r28
 432:	01 96       	adiw	r24, 0x01	; 1
 434:	3c 01       	movw	r6, r24
 436:	f6 01       	movw	r30, r12
 438:	93 81       	ldd	r25, Z+3	; 0x03
 43a:	f7 01       	movw	r30, r14
 43c:	93 fd       	sbrc	r25, 3
 43e:	85 91       	lpm	r24, Z+
 440:	93 ff       	sbrs	r25, 3
 442:	81 91       	ld	r24, Z+
 444:	7f 01       	movw	r14, r30
 446:	88 23       	and	r24, r24
 448:	09 f4       	brne	.+2      	; 0x44c <vfprintf+0x38>
 44a:	ad c1       	rjmp	.+858    	; 0x7a6 <__stack+0x347>
 44c:	85 32       	cpi	r24, 0x25	; 37
 44e:	39 f4       	brne	.+14     	; 0x45e <vfprintf+0x4a>
 450:	93 fd       	sbrc	r25, 3
 452:	85 91       	lpm	r24, Z+
 454:	93 ff       	sbrs	r25, 3
 456:	81 91       	ld	r24, Z+
 458:	7f 01       	movw	r14, r30
 45a:	85 32       	cpi	r24, 0x25	; 37
 45c:	21 f4       	brne	.+8      	; 0x466 <__stack+0x7>
 45e:	b6 01       	movw	r22, r12
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	c0 d1       	rcall	.+896    	; 0x7e4 <fputc>
 464:	e8 cf       	rjmp	.-48     	; 0x436 <vfprintf+0x22>
 466:	91 2c       	mov	r9, r1
 468:	21 2c       	mov	r2, r1
 46a:	31 2c       	mov	r3, r1
 46c:	ff e1       	ldi	r31, 0x1F	; 31
 46e:	f3 15       	cp	r31, r3
 470:	d8 f0       	brcs	.+54     	; 0x4a8 <__stack+0x49>
 472:	8b 32       	cpi	r24, 0x2B	; 43
 474:	79 f0       	breq	.+30     	; 0x494 <__stack+0x35>
 476:	38 f4       	brcc	.+14     	; 0x486 <__stack+0x27>
 478:	80 32       	cpi	r24, 0x20	; 32
 47a:	79 f0       	breq	.+30     	; 0x49a <__stack+0x3b>
 47c:	83 32       	cpi	r24, 0x23	; 35
 47e:	a1 f4       	brne	.+40     	; 0x4a8 <__stack+0x49>
 480:	23 2d       	mov	r18, r3
 482:	20 61       	ori	r18, 0x10	; 16
 484:	1d c0       	rjmp	.+58     	; 0x4c0 <__stack+0x61>
 486:	8d 32       	cpi	r24, 0x2D	; 45
 488:	61 f0       	breq	.+24     	; 0x4a2 <__stack+0x43>
 48a:	80 33       	cpi	r24, 0x30	; 48
 48c:	69 f4       	brne	.+26     	; 0x4a8 <__stack+0x49>
 48e:	23 2d       	mov	r18, r3
 490:	21 60       	ori	r18, 0x01	; 1
 492:	16 c0       	rjmp	.+44     	; 0x4c0 <__stack+0x61>
 494:	83 2d       	mov	r24, r3
 496:	82 60       	ori	r24, 0x02	; 2
 498:	38 2e       	mov	r3, r24
 49a:	e3 2d       	mov	r30, r3
 49c:	e4 60       	ori	r30, 0x04	; 4
 49e:	3e 2e       	mov	r3, r30
 4a0:	2a c0       	rjmp	.+84     	; 0x4f6 <__stack+0x97>
 4a2:	f3 2d       	mov	r31, r3
 4a4:	f8 60       	ori	r31, 0x08	; 8
 4a6:	1d c0       	rjmp	.+58     	; 0x4e2 <__stack+0x83>
 4a8:	37 fc       	sbrc	r3, 7
 4aa:	2d c0       	rjmp	.+90     	; 0x506 <__stack+0xa7>
 4ac:	20 ed       	ldi	r18, 0xD0	; 208
 4ae:	28 0f       	add	r18, r24
 4b0:	2a 30       	cpi	r18, 0x0A	; 10
 4b2:	40 f0       	brcs	.+16     	; 0x4c4 <__stack+0x65>
 4b4:	8e 32       	cpi	r24, 0x2E	; 46
 4b6:	b9 f4       	brne	.+46     	; 0x4e6 <__stack+0x87>
 4b8:	36 fc       	sbrc	r3, 6
 4ba:	75 c1       	rjmp	.+746    	; 0x7a6 <__stack+0x347>
 4bc:	23 2d       	mov	r18, r3
 4be:	20 64       	ori	r18, 0x40	; 64
 4c0:	32 2e       	mov	r3, r18
 4c2:	19 c0       	rjmp	.+50     	; 0x4f6 <__stack+0x97>
 4c4:	36 fe       	sbrs	r3, 6
 4c6:	06 c0       	rjmp	.+12     	; 0x4d4 <__stack+0x75>
 4c8:	8a e0       	ldi	r24, 0x0A	; 10
 4ca:	98 9e       	mul	r9, r24
 4cc:	20 0d       	add	r18, r0
 4ce:	11 24       	eor	r1, r1
 4d0:	92 2e       	mov	r9, r18
 4d2:	11 c0       	rjmp	.+34     	; 0x4f6 <__stack+0x97>
 4d4:	ea e0       	ldi	r30, 0x0A	; 10
 4d6:	2e 9e       	mul	r2, r30
 4d8:	20 0d       	add	r18, r0
 4da:	11 24       	eor	r1, r1
 4dc:	22 2e       	mov	r2, r18
 4de:	f3 2d       	mov	r31, r3
 4e0:	f0 62       	ori	r31, 0x20	; 32
 4e2:	3f 2e       	mov	r3, r31
 4e4:	08 c0       	rjmp	.+16     	; 0x4f6 <__stack+0x97>
 4e6:	8c 36       	cpi	r24, 0x6C	; 108
 4e8:	21 f4       	brne	.+8      	; 0x4f2 <__stack+0x93>
 4ea:	83 2d       	mov	r24, r3
 4ec:	80 68       	ori	r24, 0x80	; 128
 4ee:	38 2e       	mov	r3, r24
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <__stack+0x97>
 4f2:	88 36       	cpi	r24, 0x68	; 104
 4f4:	41 f4       	brne	.+16     	; 0x506 <__stack+0xa7>
 4f6:	f7 01       	movw	r30, r14
 4f8:	93 fd       	sbrc	r25, 3
 4fa:	85 91       	lpm	r24, Z+
 4fc:	93 ff       	sbrs	r25, 3
 4fe:	81 91       	ld	r24, Z+
 500:	7f 01       	movw	r14, r30
 502:	81 11       	cpse	r24, r1
 504:	b3 cf       	rjmp	.-154    	; 0x46c <__stack+0xd>
 506:	98 2f       	mov	r25, r24
 508:	9f 7d       	andi	r25, 0xDF	; 223
 50a:	95 54       	subi	r25, 0x45	; 69
 50c:	93 30       	cpi	r25, 0x03	; 3
 50e:	28 f4       	brcc	.+10     	; 0x51a <__stack+0xbb>
 510:	0c 5f       	subi	r16, 0xFC	; 252
 512:	1f 4f       	sbci	r17, 0xFF	; 255
 514:	9f e3       	ldi	r25, 0x3F	; 63
 516:	99 83       	std	Y+1, r25	; 0x01
 518:	0d c0       	rjmp	.+26     	; 0x534 <__stack+0xd5>
 51a:	83 36       	cpi	r24, 0x63	; 99
 51c:	31 f0       	breq	.+12     	; 0x52a <__stack+0xcb>
 51e:	83 37       	cpi	r24, 0x73	; 115
 520:	71 f0       	breq	.+28     	; 0x53e <__stack+0xdf>
 522:	83 35       	cpi	r24, 0x53	; 83
 524:	09 f0       	breq	.+2      	; 0x528 <__stack+0xc9>
 526:	55 c0       	rjmp	.+170    	; 0x5d2 <__stack+0x173>
 528:	20 c0       	rjmp	.+64     	; 0x56a <__stack+0x10b>
 52a:	f8 01       	movw	r30, r16
 52c:	80 81       	ld	r24, Z
 52e:	89 83       	std	Y+1, r24	; 0x01
 530:	0e 5f       	subi	r16, 0xFE	; 254
 532:	1f 4f       	sbci	r17, 0xFF	; 255
 534:	88 24       	eor	r8, r8
 536:	83 94       	inc	r8
 538:	91 2c       	mov	r9, r1
 53a:	53 01       	movw	r10, r6
 53c:	12 c0       	rjmp	.+36     	; 0x562 <__stack+0x103>
 53e:	28 01       	movw	r4, r16
 540:	f2 e0       	ldi	r31, 0x02	; 2
 542:	4f 0e       	add	r4, r31
 544:	51 1c       	adc	r5, r1
 546:	f8 01       	movw	r30, r16
 548:	a0 80       	ld	r10, Z
 54a:	b1 80       	ldd	r11, Z+1	; 0x01
 54c:	36 fe       	sbrs	r3, 6
 54e:	03 c0       	rjmp	.+6      	; 0x556 <__stack+0xf7>
 550:	69 2d       	mov	r22, r9
 552:	70 e0       	ldi	r23, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <__stack+0xfb>
 556:	6f ef       	ldi	r22, 0xFF	; 255
 558:	7f ef       	ldi	r23, 0xFF	; 255
 55a:	c5 01       	movw	r24, r10
 55c:	38 d1       	rcall	.+624    	; 0x7ce <strnlen>
 55e:	4c 01       	movw	r8, r24
 560:	82 01       	movw	r16, r4
 562:	f3 2d       	mov	r31, r3
 564:	ff 77       	andi	r31, 0x7F	; 127
 566:	3f 2e       	mov	r3, r31
 568:	15 c0       	rjmp	.+42     	; 0x594 <__stack+0x135>
 56a:	28 01       	movw	r4, r16
 56c:	22 e0       	ldi	r18, 0x02	; 2
 56e:	42 0e       	add	r4, r18
 570:	51 1c       	adc	r5, r1
 572:	f8 01       	movw	r30, r16
 574:	a0 80       	ld	r10, Z
 576:	b1 80       	ldd	r11, Z+1	; 0x01
 578:	36 fe       	sbrs	r3, 6
 57a:	03 c0       	rjmp	.+6      	; 0x582 <__stack+0x123>
 57c:	69 2d       	mov	r22, r9
 57e:	70 e0       	ldi	r23, 0x00	; 0
 580:	02 c0       	rjmp	.+4      	; 0x586 <__stack+0x127>
 582:	6f ef       	ldi	r22, 0xFF	; 255
 584:	7f ef       	ldi	r23, 0xFF	; 255
 586:	c5 01       	movw	r24, r10
 588:	17 d1       	rcall	.+558    	; 0x7b8 <strnlen_P>
 58a:	4c 01       	movw	r8, r24
 58c:	f3 2d       	mov	r31, r3
 58e:	f0 68       	ori	r31, 0x80	; 128
 590:	3f 2e       	mov	r3, r31
 592:	82 01       	movw	r16, r4
 594:	33 fc       	sbrc	r3, 3
 596:	19 c0       	rjmp	.+50     	; 0x5ca <__stack+0x16b>
 598:	82 2d       	mov	r24, r2
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	88 16       	cp	r8, r24
 59e:	99 06       	cpc	r9, r25
 5a0:	a0 f4       	brcc	.+40     	; 0x5ca <__stack+0x16b>
 5a2:	b6 01       	movw	r22, r12
 5a4:	80 e2       	ldi	r24, 0x20	; 32
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	1d d1       	rcall	.+570    	; 0x7e4 <fputc>
 5aa:	2a 94       	dec	r2
 5ac:	f5 cf       	rjmp	.-22     	; 0x598 <__stack+0x139>
 5ae:	f5 01       	movw	r30, r10
 5b0:	37 fc       	sbrc	r3, 7
 5b2:	85 91       	lpm	r24, Z+
 5b4:	37 fe       	sbrs	r3, 7
 5b6:	81 91       	ld	r24, Z+
 5b8:	5f 01       	movw	r10, r30
 5ba:	b6 01       	movw	r22, r12
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	12 d1       	rcall	.+548    	; 0x7e4 <fputc>
 5c0:	21 10       	cpse	r2, r1
 5c2:	2a 94       	dec	r2
 5c4:	21 e0       	ldi	r18, 0x01	; 1
 5c6:	82 1a       	sub	r8, r18
 5c8:	91 08       	sbc	r9, r1
 5ca:	81 14       	cp	r8, r1
 5cc:	91 04       	cpc	r9, r1
 5ce:	79 f7       	brne	.-34     	; 0x5ae <__stack+0x14f>
 5d0:	e1 c0       	rjmp	.+450    	; 0x794 <__stack+0x335>
 5d2:	84 36       	cpi	r24, 0x64	; 100
 5d4:	11 f0       	breq	.+4      	; 0x5da <__stack+0x17b>
 5d6:	89 36       	cpi	r24, 0x69	; 105
 5d8:	39 f5       	brne	.+78     	; 0x628 <__stack+0x1c9>
 5da:	f8 01       	movw	r30, r16
 5dc:	37 fe       	sbrs	r3, 7
 5de:	07 c0       	rjmp	.+14     	; 0x5ee <__stack+0x18f>
 5e0:	60 81       	ld	r22, Z
 5e2:	71 81       	ldd	r23, Z+1	; 0x01
 5e4:	82 81       	ldd	r24, Z+2	; 0x02
 5e6:	93 81       	ldd	r25, Z+3	; 0x03
 5e8:	0c 5f       	subi	r16, 0xFC	; 252
 5ea:	1f 4f       	sbci	r17, 0xFF	; 255
 5ec:	08 c0       	rjmp	.+16     	; 0x5fe <__stack+0x19f>
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	07 2e       	mov	r0, r23
 5f4:	00 0c       	add	r0, r0
 5f6:	88 0b       	sbc	r24, r24
 5f8:	99 0b       	sbc	r25, r25
 5fa:	0e 5f       	subi	r16, 0xFE	; 254
 5fc:	1f 4f       	sbci	r17, 0xFF	; 255
 5fe:	f3 2d       	mov	r31, r3
 600:	ff 76       	andi	r31, 0x6F	; 111
 602:	3f 2e       	mov	r3, r31
 604:	97 ff       	sbrs	r25, 7
 606:	09 c0       	rjmp	.+18     	; 0x61a <__stack+0x1bb>
 608:	90 95       	com	r25
 60a:	80 95       	com	r24
 60c:	70 95       	com	r23
 60e:	61 95       	neg	r22
 610:	7f 4f       	sbci	r23, 0xFF	; 255
 612:	8f 4f       	sbci	r24, 0xFF	; 255
 614:	9f 4f       	sbci	r25, 0xFF	; 255
 616:	f0 68       	ori	r31, 0x80	; 128
 618:	3f 2e       	mov	r3, r31
 61a:	2a e0       	ldi	r18, 0x0A	; 10
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	a3 01       	movw	r20, r6
 620:	1d d1       	rcall	.+570    	; 0x85c <__ultoa_invert>
 622:	88 2e       	mov	r8, r24
 624:	86 18       	sub	r8, r6
 626:	44 c0       	rjmp	.+136    	; 0x6b0 <__stack+0x251>
 628:	85 37       	cpi	r24, 0x75	; 117
 62a:	31 f4       	brne	.+12     	; 0x638 <__stack+0x1d9>
 62c:	23 2d       	mov	r18, r3
 62e:	2f 7e       	andi	r18, 0xEF	; 239
 630:	b2 2e       	mov	r11, r18
 632:	2a e0       	ldi	r18, 0x0A	; 10
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	25 c0       	rjmp	.+74     	; 0x682 <__stack+0x223>
 638:	93 2d       	mov	r25, r3
 63a:	99 7f       	andi	r25, 0xF9	; 249
 63c:	b9 2e       	mov	r11, r25
 63e:	8f 36       	cpi	r24, 0x6F	; 111
 640:	c1 f0       	breq	.+48     	; 0x672 <__stack+0x213>
 642:	18 f4       	brcc	.+6      	; 0x64a <__stack+0x1eb>
 644:	88 35       	cpi	r24, 0x58	; 88
 646:	79 f0       	breq	.+30     	; 0x666 <__stack+0x207>
 648:	ae c0       	rjmp	.+348    	; 0x7a6 <__stack+0x347>
 64a:	80 37       	cpi	r24, 0x70	; 112
 64c:	19 f0       	breq	.+6      	; 0x654 <__stack+0x1f5>
 64e:	88 37       	cpi	r24, 0x78	; 120
 650:	21 f0       	breq	.+8      	; 0x65a <__stack+0x1fb>
 652:	a9 c0       	rjmp	.+338    	; 0x7a6 <__stack+0x347>
 654:	e9 2f       	mov	r30, r25
 656:	e0 61       	ori	r30, 0x10	; 16
 658:	be 2e       	mov	r11, r30
 65a:	b4 fe       	sbrs	r11, 4
 65c:	0d c0       	rjmp	.+26     	; 0x678 <__stack+0x219>
 65e:	fb 2d       	mov	r31, r11
 660:	f4 60       	ori	r31, 0x04	; 4
 662:	bf 2e       	mov	r11, r31
 664:	09 c0       	rjmp	.+18     	; 0x678 <__stack+0x219>
 666:	34 fe       	sbrs	r3, 4
 668:	0a c0       	rjmp	.+20     	; 0x67e <__stack+0x21f>
 66a:	29 2f       	mov	r18, r25
 66c:	26 60       	ori	r18, 0x06	; 6
 66e:	b2 2e       	mov	r11, r18
 670:	06 c0       	rjmp	.+12     	; 0x67e <__stack+0x21f>
 672:	28 e0       	ldi	r18, 0x08	; 8
 674:	30 e0       	ldi	r19, 0x00	; 0
 676:	05 c0       	rjmp	.+10     	; 0x682 <__stack+0x223>
 678:	20 e1       	ldi	r18, 0x10	; 16
 67a:	30 e0       	ldi	r19, 0x00	; 0
 67c:	02 c0       	rjmp	.+4      	; 0x682 <__stack+0x223>
 67e:	20 e1       	ldi	r18, 0x10	; 16
 680:	32 e0       	ldi	r19, 0x02	; 2
 682:	f8 01       	movw	r30, r16
 684:	b7 fe       	sbrs	r11, 7
 686:	07 c0       	rjmp	.+14     	; 0x696 <__stack+0x237>
 688:	60 81       	ld	r22, Z
 68a:	71 81       	ldd	r23, Z+1	; 0x01
 68c:	82 81       	ldd	r24, Z+2	; 0x02
 68e:	93 81       	ldd	r25, Z+3	; 0x03
 690:	0c 5f       	subi	r16, 0xFC	; 252
 692:	1f 4f       	sbci	r17, 0xFF	; 255
 694:	06 c0       	rjmp	.+12     	; 0x6a2 <__stack+0x243>
 696:	60 81       	ld	r22, Z
 698:	71 81       	ldd	r23, Z+1	; 0x01
 69a:	80 e0       	ldi	r24, 0x00	; 0
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	0e 5f       	subi	r16, 0xFE	; 254
 6a0:	1f 4f       	sbci	r17, 0xFF	; 255
 6a2:	a3 01       	movw	r20, r6
 6a4:	db d0       	rcall	.+438    	; 0x85c <__ultoa_invert>
 6a6:	88 2e       	mov	r8, r24
 6a8:	86 18       	sub	r8, r6
 6aa:	fb 2d       	mov	r31, r11
 6ac:	ff 77       	andi	r31, 0x7F	; 127
 6ae:	3f 2e       	mov	r3, r31
 6b0:	36 fe       	sbrs	r3, 6
 6b2:	0d c0       	rjmp	.+26     	; 0x6ce <__stack+0x26f>
 6b4:	23 2d       	mov	r18, r3
 6b6:	2e 7f       	andi	r18, 0xFE	; 254
 6b8:	a2 2e       	mov	r10, r18
 6ba:	89 14       	cp	r8, r9
 6bc:	58 f4       	brcc	.+22     	; 0x6d4 <__stack+0x275>
 6be:	34 fe       	sbrs	r3, 4
 6c0:	0b c0       	rjmp	.+22     	; 0x6d8 <__stack+0x279>
 6c2:	32 fc       	sbrc	r3, 2
 6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <__stack+0x279>
 6c6:	83 2d       	mov	r24, r3
 6c8:	8e 7e       	andi	r24, 0xEE	; 238
 6ca:	a8 2e       	mov	r10, r24
 6cc:	05 c0       	rjmp	.+10     	; 0x6d8 <__stack+0x279>
 6ce:	b8 2c       	mov	r11, r8
 6d0:	a3 2c       	mov	r10, r3
 6d2:	03 c0       	rjmp	.+6      	; 0x6da <__stack+0x27b>
 6d4:	b8 2c       	mov	r11, r8
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <__stack+0x27b>
 6d8:	b9 2c       	mov	r11, r9
 6da:	a4 fe       	sbrs	r10, 4
 6dc:	0f c0       	rjmp	.+30     	; 0x6fc <__stack+0x29d>
 6de:	fe 01       	movw	r30, r28
 6e0:	e8 0d       	add	r30, r8
 6e2:	f1 1d       	adc	r31, r1
 6e4:	80 81       	ld	r24, Z
 6e6:	80 33       	cpi	r24, 0x30	; 48
 6e8:	21 f4       	brne	.+8      	; 0x6f2 <__stack+0x293>
 6ea:	9a 2d       	mov	r25, r10
 6ec:	99 7e       	andi	r25, 0xE9	; 233
 6ee:	a9 2e       	mov	r10, r25
 6f0:	09 c0       	rjmp	.+18     	; 0x704 <__stack+0x2a5>
 6f2:	a2 fe       	sbrs	r10, 2
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <__stack+0x2a3>
 6f6:	b3 94       	inc	r11
 6f8:	b3 94       	inc	r11
 6fa:	04 c0       	rjmp	.+8      	; 0x704 <__stack+0x2a5>
 6fc:	8a 2d       	mov	r24, r10
 6fe:	86 78       	andi	r24, 0x86	; 134
 700:	09 f0       	breq	.+2      	; 0x704 <__stack+0x2a5>
 702:	b3 94       	inc	r11
 704:	a3 fc       	sbrc	r10, 3
 706:	10 c0       	rjmp	.+32     	; 0x728 <__stack+0x2c9>
 708:	a0 fe       	sbrs	r10, 0
 70a:	06 c0       	rjmp	.+12     	; 0x718 <__stack+0x2b9>
 70c:	b2 14       	cp	r11, r2
 70e:	80 f4       	brcc	.+32     	; 0x730 <__stack+0x2d1>
 710:	28 0c       	add	r2, r8
 712:	92 2c       	mov	r9, r2
 714:	9b 18       	sub	r9, r11
 716:	0d c0       	rjmp	.+26     	; 0x732 <__stack+0x2d3>
 718:	b2 14       	cp	r11, r2
 71a:	58 f4       	brcc	.+22     	; 0x732 <__stack+0x2d3>
 71c:	b6 01       	movw	r22, r12
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	60 d0       	rcall	.+192    	; 0x7e4 <fputc>
 724:	b3 94       	inc	r11
 726:	f8 cf       	rjmp	.-16     	; 0x718 <__stack+0x2b9>
 728:	b2 14       	cp	r11, r2
 72a:	18 f4       	brcc	.+6      	; 0x732 <__stack+0x2d3>
 72c:	2b 18       	sub	r2, r11
 72e:	02 c0       	rjmp	.+4      	; 0x734 <__stack+0x2d5>
 730:	98 2c       	mov	r9, r8
 732:	21 2c       	mov	r2, r1
 734:	a4 fe       	sbrs	r10, 4
 736:	0f c0       	rjmp	.+30     	; 0x756 <__stack+0x2f7>
 738:	b6 01       	movw	r22, r12
 73a:	80 e3       	ldi	r24, 0x30	; 48
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	52 d0       	rcall	.+164    	; 0x7e4 <fputc>
 740:	a2 fe       	sbrs	r10, 2
 742:	16 c0       	rjmp	.+44     	; 0x770 <__stack+0x311>
 744:	a1 fc       	sbrc	r10, 1
 746:	03 c0       	rjmp	.+6      	; 0x74e <__stack+0x2ef>
 748:	88 e7       	ldi	r24, 0x78	; 120
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	02 c0       	rjmp	.+4      	; 0x752 <__stack+0x2f3>
 74e:	88 e5       	ldi	r24, 0x58	; 88
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	b6 01       	movw	r22, r12
 754:	0c c0       	rjmp	.+24     	; 0x76e <__stack+0x30f>
 756:	8a 2d       	mov	r24, r10
 758:	86 78       	andi	r24, 0x86	; 134
 75a:	51 f0       	breq	.+20     	; 0x770 <__stack+0x311>
 75c:	a1 fe       	sbrs	r10, 1
 75e:	02 c0       	rjmp	.+4      	; 0x764 <__stack+0x305>
 760:	8b e2       	ldi	r24, 0x2B	; 43
 762:	01 c0       	rjmp	.+2      	; 0x766 <__stack+0x307>
 764:	80 e2       	ldi	r24, 0x20	; 32
 766:	a7 fc       	sbrc	r10, 7
 768:	8d e2       	ldi	r24, 0x2D	; 45
 76a:	b6 01       	movw	r22, r12
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	3a d0       	rcall	.+116    	; 0x7e4 <fputc>
 770:	89 14       	cp	r8, r9
 772:	30 f4       	brcc	.+12     	; 0x780 <__stack+0x321>
 774:	b6 01       	movw	r22, r12
 776:	80 e3       	ldi	r24, 0x30	; 48
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	34 d0       	rcall	.+104    	; 0x7e4 <fputc>
 77c:	9a 94       	dec	r9
 77e:	f8 cf       	rjmp	.-16     	; 0x770 <__stack+0x311>
 780:	8a 94       	dec	r8
 782:	f3 01       	movw	r30, r6
 784:	e8 0d       	add	r30, r8
 786:	f1 1d       	adc	r31, r1
 788:	80 81       	ld	r24, Z
 78a:	b6 01       	movw	r22, r12
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	2a d0       	rcall	.+84     	; 0x7e4 <fputc>
 790:	81 10       	cpse	r8, r1
 792:	f6 cf       	rjmp	.-20     	; 0x780 <__stack+0x321>
 794:	22 20       	and	r2, r2
 796:	09 f4       	brne	.+2      	; 0x79a <__stack+0x33b>
 798:	4e ce       	rjmp	.-868    	; 0x436 <vfprintf+0x22>
 79a:	b6 01       	movw	r22, r12
 79c:	80 e2       	ldi	r24, 0x20	; 32
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	21 d0       	rcall	.+66     	; 0x7e4 <fputc>
 7a2:	2a 94       	dec	r2
 7a4:	f7 cf       	rjmp	.-18     	; 0x794 <__stack+0x335>
 7a6:	f6 01       	movw	r30, r12
 7a8:	86 81       	ldd	r24, Z+6	; 0x06
 7aa:	97 81       	ldd	r25, Z+7	; 0x07
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <__stack+0x353>
 7ae:	8f ef       	ldi	r24, 0xFF	; 255
 7b0:	9f ef       	ldi	r25, 0xFF	; 255
 7b2:	2b 96       	adiw	r28, 0x0b	; 11
 7b4:	e2 e1       	ldi	r30, 0x12	; 18
 7b6:	cc c0       	rjmp	.+408    	; 0x950 <__epilogue_restores__>

000007b8 <strnlen_P>:
 7b8:	fc 01       	movw	r30, r24
 7ba:	05 90       	lpm	r0, Z+
 7bc:	61 50       	subi	r22, 0x01	; 1
 7be:	70 40       	sbci	r23, 0x00	; 0
 7c0:	01 10       	cpse	r0, r1
 7c2:	d8 f7       	brcc	.-10     	; 0x7ba <strnlen_P+0x2>
 7c4:	80 95       	com	r24
 7c6:	90 95       	com	r25
 7c8:	8e 0f       	add	r24, r30
 7ca:	9f 1f       	adc	r25, r31
 7cc:	08 95       	ret

000007ce <strnlen>:
 7ce:	fc 01       	movw	r30, r24
 7d0:	61 50       	subi	r22, 0x01	; 1
 7d2:	70 40       	sbci	r23, 0x00	; 0
 7d4:	01 90       	ld	r0, Z+
 7d6:	01 10       	cpse	r0, r1
 7d8:	d8 f7       	brcc	.-10     	; 0x7d0 <strnlen+0x2>
 7da:	80 95       	com	r24
 7dc:	90 95       	com	r25
 7de:	8e 0f       	add	r24, r30
 7e0:	9f 1f       	adc	r25, r31
 7e2:	08 95       	ret

000007e4 <fputc>:
 7e4:	0f 93       	push	r16
 7e6:	1f 93       	push	r17
 7e8:	cf 93       	push	r28
 7ea:	df 93       	push	r29
 7ec:	fb 01       	movw	r30, r22
 7ee:	23 81       	ldd	r18, Z+3	; 0x03
 7f0:	21 fd       	sbrc	r18, 1
 7f2:	03 c0       	rjmp	.+6      	; 0x7fa <fputc+0x16>
 7f4:	8f ef       	ldi	r24, 0xFF	; 255
 7f6:	9f ef       	ldi	r25, 0xFF	; 255
 7f8:	2c c0       	rjmp	.+88     	; 0x852 <fputc+0x6e>
 7fa:	22 ff       	sbrs	r18, 2
 7fc:	16 c0       	rjmp	.+44     	; 0x82a <fputc+0x46>
 7fe:	46 81       	ldd	r20, Z+6	; 0x06
 800:	57 81       	ldd	r21, Z+7	; 0x07
 802:	24 81       	ldd	r18, Z+4	; 0x04
 804:	35 81       	ldd	r19, Z+5	; 0x05
 806:	42 17       	cp	r20, r18
 808:	53 07       	cpc	r21, r19
 80a:	44 f4       	brge	.+16     	; 0x81c <fputc+0x38>
 80c:	a0 81       	ld	r26, Z
 80e:	b1 81       	ldd	r27, Z+1	; 0x01
 810:	9d 01       	movw	r18, r26
 812:	2f 5f       	subi	r18, 0xFF	; 255
 814:	3f 4f       	sbci	r19, 0xFF	; 255
 816:	31 83       	std	Z+1, r19	; 0x01
 818:	20 83       	st	Z, r18
 81a:	8c 93       	st	X, r24
 81c:	26 81       	ldd	r18, Z+6	; 0x06
 81e:	37 81       	ldd	r19, Z+7	; 0x07
 820:	2f 5f       	subi	r18, 0xFF	; 255
 822:	3f 4f       	sbci	r19, 0xFF	; 255
 824:	37 83       	std	Z+7, r19	; 0x07
 826:	26 83       	std	Z+6, r18	; 0x06
 828:	14 c0       	rjmp	.+40     	; 0x852 <fputc+0x6e>
 82a:	8b 01       	movw	r16, r22
 82c:	ec 01       	movw	r28, r24
 82e:	fb 01       	movw	r30, r22
 830:	00 84       	ldd	r0, Z+8	; 0x08
 832:	f1 85       	ldd	r31, Z+9	; 0x09
 834:	e0 2d       	mov	r30, r0
 836:	09 95       	icall
 838:	89 2b       	or	r24, r25
 83a:	e1 f6       	brne	.-72     	; 0x7f4 <fputc+0x10>
 83c:	d8 01       	movw	r26, r16
 83e:	16 96       	adiw	r26, 0x06	; 6
 840:	8d 91       	ld	r24, X+
 842:	9c 91       	ld	r25, X
 844:	17 97       	sbiw	r26, 0x07	; 7
 846:	01 96       	adiw	r24, 0x01	; 1
 848:	17 96       	adiw	r26, 0x07	; 7
 84a:	9c 93       	st	X, r25
 84c:	8e 93       	st	-X, r24
 84e:	16 97       	sbiw	r26, 0x06	; 6
 850:	ce 01       	movw	r24, r28
 852:	df 91       	pop	r29
 854:	cf 91       	pop	r28
 856:	1f 91       	pop	r17
 858:	0f 91       	pop	r16
 85a:	08 95       	ret

0000085c <__ultoa_invert>:
 85c:	fa 01       	movw	r30, r20
 85e:	aa 27       	eor	r26, r26
 860:	28 30       	cpi	r18, 0x08	; 8
 862:	51 f1       	breq	.+84     	; 0x8b8 <__ultoa_invert+0x5c>
 864:	20 31       	cpi	r18, 0x10	; 16
 866:	81 f1       	breq	.+96     	; 0x8c8 <__ultoa_invert+0x6c>
 868:	e8 94       	clt
 86a:	6f 93       	push	r22
 86c:	6e 7f       	andi	r22, 0xFE	; 254
 86e:	6e 5f       	subi	r22, 0xFE	; 254
 870:	7f 4f       	sbci	r23, 0xFF	; 255
 872:	8f 4f       	sbci	r24, 0xFF	; 255
 874:	9f 4f       	sbci	r25, 0xFF	; 255
 876:	af 4f       	sbci	r26, 0xFF	; 255
 878:	b1 e0       	ldi	r27, 0x01	; 1
 87a:	3e d0       	rcall	.+124    	; 0x8f8 <__ultoa_invert+0x9c>
 87c:	b4 e0       	ldi	r27, 0x04	; 4
 87e:	3c d0       	rcall	.+120    	; 0x8f8 <__ultoa_invert+0x9c>
 880:	67 0f       	add	r22, r23
 882:	78 1f       	adc	r23, r24
 884:	89 1f       	adc	r24, r25
 886:	9a 1f       	adc	r25, r26
 888:	a1 1d       	adc	r26, r1
 88a:	68 0f       	add	r22, r24
 88c:	79 1f       	adc	r23, r25
 88e:	8a 1f       	adc	r24, r26
 890:	91 1d       	adc	r25, r1
 892:	a1 1d       	adc	r26, r1
 894:	6a 0f       	add	r22, r26
 896:	71 1d       	adc	r23, r1
 898:	81 1d       	adc	r24, r1
 89a:	91 1d       	adc	r25, r1
 89c:	a1 1d       	adc	r26, r1
 89e:	20 d0       	rcall	.+64     	; 0x8e0 <__ultoa_invert+0x84>
 8a0:	09 f4       	brne	.+2      	; 0x8a4 <__ultoa_invert+0x48>
 8a2:	68 94       	set
 8a4:	3f 91       	pop	r19
 8a6:	2a e0       	ldi	r18, 0x0A	; 10
 8a8:	26 9f       	mul	r18, r22
 8aa:	11 24       	eor	r1, r1
 8ac:	30 19       	sub	r19, r0
 8ae:	30 5d       	subi	r19, 0xD0	; 208
 8b0:	31 93       	st	Z+, r19
 8b2:	de f6       	brtc	.-74     	; 0x86a <__ultoa_invert+0xe>
 8b4:	cf 01       	movw	r24, r30
 8b6:	08 95       	ret
 8b8:	46 2f       	mov	r20, r22
 8ba:	47 70       	andi	r20, 0x07	; 7
 8bc:	40 5d       	subi	r20, 0xD0	; 208
 8be:	41 93       	st	Z+, r20
 8c0:	b3 e0       	ldi	r27, 0x03	; 3
 8c2:	0f d0       	rcall	.+30     	; 0x8e2 <__ultoa_invert+0x86>
 8c4:	c9 f7       	brne	.-14     	; 0x8b8 <__ultoa_invert+0x5c>
 8c6:	f6 cf       	rjmp	.-20     	; 0x8b4 <__ultoa_invert+0x58>
 8c8:	46 2f       	mov	r20, r22
 8ca:	4f 70       	andi	r20, 0x0F	; 15
 8cc:	40 5d       	subi	r20, 0xD0	; 208
 8ce:	4a 33       	cpi	r20, 0x3A	; 58
 8d0:	18 f0       	brcs	.+6      	; 0x8d8 <__ultoa_invert+0x7c>
 8d2:	49 5d       	subi	r20, 0xD9	; 217
 8d4:	31 fd       	sbrc	r19, 1
 8d6:	40 52       	subi	r20, 0x20	; 32
 8d8:	41 93       	st	Z+, r20
 8da:	02 d0       	rcall	.+4      	; 0x8e0 <__ultoa_invert+0x84>
 8dc:	a9 f7       	brne	.-22     	; 0x8c8 <__ultoa_invert+0x6c>
 8de:	ea cf       	rjmp	.-44     	; 0x8b4 <__ultoa_invert+0x58>
 8e0:	b4 e0       	ldi	r27, 0x04	; 4
 8e2:	a6 95       	lsr	r26
 8e4:	97 95       	ror	r25
 8e6:	87 95       	ror	r24
 8e8:	77 95       	ror	r23
 8ea:	67 95       	ror	r22
 8ec:	ba 95       	dec	r27
 8ee:	c9 f7       	brne	.-14     	; 0x8e2 <__ultoa_invert+0x86>
 8f0:	00 97       	sbiw	r24, 0x00	; 0
 8f2:	61 05       	cpc	r22, r1
 8f4:	71 05       	cpc	r23, r1
 8f6:	08 95       	ret
 8f8:	9b 01       	movw	r18, r22
 8fa:	ac 01       	movw	r20, r24
 8fc:	0a 2e       	mov	r0, r26
 8fe:	06 94       	lsr	r0
 900:	57 95       	ror	r21
 902:	47 95       	ror	r20
 904:	37 95       	ror	r19
 906:	27 95       	ror	r18
 908:	ba 95       	dec	r27
 90a:	c9 f7       	brne	.-14     	; 0x8fe <__ultoa_invert+0xa2>
 90c:	62 0f       	add	r22, r18
 90e:	73 1f       	adc	r23, r19
 910:	84 1f       	adc	r24, r20
 912:	95 1f       	adc	r25, r21
 914:	a0 1d       	adc	r26, r0
 916:	08 95       	ret

00000918 <__prologue_saves__>:
 918:	2f 92       	push	r2
 91a:	3f 92       	push	r3
 91c:	4f 92       	push	r4
 91e:	5f 92       	push	r5
 920:	6f 92       	push	r6
 922:	7f 92       	push	r7
 924:	8f 92       	push	r8
 926:	9f 92       	push	r9
 928:	af 92       	push	r10
 92a:	bf 92       	push	r11
 92c:	cf 92       	push	r12
 92e:	df 92       	push	r13
 930:	ef 92       	push	r14
 932:	ff 92       	push	r15
 934:	0f 93       	push	r16
 936:	1f 93       	push	r17
 938:	cf 93       	push	r28
 93a:	df 93       	push	r29
 93c:	cd b7       	in	r28, 0x3d	; 61
 93e:	de b7       	in	r29, 0x3e	; 62
 940:	ca 1b       	sub	r28, r26
 942:	db 0b       	sbc	r29, r27
 944:	0f b6       	in	r0, 0x3f	; 63
 946:	f8 94       	cli
 948:	de bf       	out	0x3e, r29	; 62
 94a:	0f be       	out	0x3f, r0	; 63
 94c:	cd bf       	out	0x3d, r28	; 61
 94e:	09 94       	ijmp

00000950 <__epilogue_restores__>:
 950:	2a 88       	ldd	r2, Y+18	; 0x12
 952:	39 88       	ldd	r3, Y+17	; 0x11
 954:	48 88       	ldd	r4, Y+16	; 0x10
 956:	5f 84       	ldd	r5, Y+15	; 0x0f
 958:	6e 84       	ldd	r6, Y+14	; 0x0e
 95a:	7d 84       	ldd	r7, Y+13	; 0x0d
 95c:	8c 84       	ldd	r8, Y+12	; 0x0c
 95e:	9b 84       	ldd	r9, Y+11	; 0x0b
 960:	aa 84       	ldd	r10, Y+10	; 0x0a
 962:	b9 84       	ldd	r11, Y+9	; 0x09
 964:	c8 84       	ldd	r12, Y+8	; 0x08
 966:	df 80       	ldd	r13, Y+7	; 0x07
 968:	ee 80       	ldd	r14, Y+6	; 0x06
 96a:	fd 80       	ldd	r15, Y+5	; 0x05
 96c:	0c 81       	ldd	r16, Y+4	; 0x04
 96e:	1b 81       	ldd	r17, Y+3	; 0x03
 970:	aa 81       	ldd	r26, Y+2	; 0x02
 972:	b9 81       	ldd	r27, Y+1	; 0x01
 974:	ce 0f       	add	r28, r30
 976:	d1 1d       	adc	r29, r1
 978:	0f b6       	in	r0, 0x3f	; 63
 97a:	f8 94       	cli
 97c:	de bf       	out	0x3e, r29	; 62
 97e:	0f be       	out	0x3f, r0	; 63
 980:	cd bf       	out	0x3d, r28	; 61
 982:	ed 01       	movw	r28, r26
 984:	08 95       	ret

00000986 <_exit>:
 986:	f8 94       	cli

00000988 <__stop_program>:
 988:	ff cf       	rjmp	.-2      	; 0x988 <__stop_program>
